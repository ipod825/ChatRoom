/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * progressbar.java
 *
 * Created on 2011/3/19, 下午 03:43:16
 */

package gui;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import testclient.NewMain;

/**
 *
 * @author grilledchops
 */
public class progressbar extends javax.swing.JPanel {

    /** Creates new form progressbar */
    public progressbar(Thread t_thread) {
        initComponents();
        thread = t_thread;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("Initialize...");
        status = "initial";

        jButton1.setText("Abort");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        this.setMaximumSize(new java.awt.Dimension(634, 74));
        this.setMinimumSize(new java.awt.Dimension(634, 74));
        this.setBackground(Color.WHITE);
        jProgressBar1.setBackground(Color.WHITE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addContainerGap())
        );
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        if(status.equals("start")) {
            abort();
        }
        else if(status.equals("abort")) {
            cancel();
        }
        else if(status.equals("initial")) {

        }
        else {

        }
    }

    public void setmission(String t_filename, long t_filesize, String t_target, boolean isServer) {
        filename = t_filename;
        filesize = t_filesize;
        target =  t_target;
        status = "start";
        if(isServer) {
            type = "Transfering File";
        }
        else {
            type = "Receiving File";
        }
        combine = type + " to " + target + " / " + filename + " " + filesize + " ";
    }

    public void setprogress(int bufferloop) {
        jLabel1.setText(combine + (bufferloop * 2));
        percentage = bufferloop * 2048 * 100/ filesize;
        jProgressBar1.setValue((int)percentage);
    }

    public void missioncomplete() {
        status = "abort";
        jProgressBar1.setValue(100);
        jButton1.setText("Remove");
    }

    public void abort() {
        status = "abort";
        jLabel1.setText(combine + "ABORT");
        jButton1.setText("Remove");
        thread.interrupted();
        NewMain.NWKSER.filemanager.delmission();
    }

    public void cancel() {
        status = "canceled";
        NewMain.NWKSER.filemanager.delmission();
        try {
            this.finalize();
        } catch (Throwable ex) {
            Logger.getLogger(progressbar.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("prgressbar filalize error");
        }
    }

    String filename = "Initialize...";
    String target;
    String type;
    String combine;
    long filesize = 0;
    long transferspeed = 0;
    long percentage = 0;
    long remains = 0;
    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration
    public String status;
    private Thread thread;
}